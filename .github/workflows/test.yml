name: CI

on:
  push:
    branches:
      - master
      - prod
      - release/*
  pull_request:
    branches:
      - master
      - prod
      - release/*

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: npm_cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('yarn.lock') }}

      - name: yarn install
        if: steps.npm_cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Verify via smart contract
        run: |
          npx hardhat test
